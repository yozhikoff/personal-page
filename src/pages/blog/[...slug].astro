---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: post,
  }));
}

const post = Astro.props;
const { Content } = await post.render();
---

<Layout title={`${post.data.title} - Artem Shmatko`} description={post.data.description}>
	<style is:global>
		/* Blog post styles */
		.prose {
			max-width: none;
		}
		
		.prose h1 { 
			@apply text-3xl font-normal text-gray-900 mb-6;
		}
		
		.prose h2 { 
			@apply text-2xl font-normal text-indigo-800 mb-4 mt-8;
		}
		
		.prose h3 { 
			@apply text-xl font-medium text-gray-800 mb-3 mt-6;
		}
		
		.prose p { 
			@apply text-gray-700 leading-relaxed mb-4;
		}
		
		.prose ul { 
			@apply list-disc list-inside text-gray-700 space-y-1 mb-4;
		}
		
		.prose ol { 
			@apply list-decimal list-inside text-gray-700 space-y-1 mb-4;
		}
		
		.prose blockquote { 
			@apply border-l-4 border-indigo-200 pl-6 py-4 italic text-gray-600 bg-gray-50 mb-6;
		}
		
		.prose pre { 
			@apply bg-gray-900 text-gray-100 p-4 rounded-lg overflow-x-auto mb-6;
		}
		
		.prose code:not(pre code) { 
			@apply bg-gray-100 text-gray-800 px-2 py-1 rounded text-sm;
		}
		
		.prose img { 
			@apply rounded-lg shadow-lg mb-6 w-full;
		}
		
		.prose a { 
			@apply text-indigo-700 hover:text-indigo-800 transition-colors;
		}
		
		.prose hr { 
			@apply border-gray-300 my-8;
		}
		
		/* Math display */
		.MathJax {
			font-size: 1.1em !important;
		}
	</style>

	<div class="mb-8">
		<a href="/blog" class="text-indigo-700 hover:text-indigo-800 transition-colors text-sm">‚Üê Back to blog</a>
	</div>

	<article>
		<header class="mb-12">
			<h1 class="text-4xl font-normal mb-4 text-gray-900">{post.data.title}</h1>
			<div class="text-gray-600 mb-4">
				<time datetime={post.data.date}>
					{new Date(post.data.date).toLocaleDateString('en-US', { 
						year: 'numeric', 
						month: 'long', 
						day: 'numeric' 
					})}
				</time>
			</div>
			{post.data.tags && (
				<div class="flex flex-wrap gap-2 mb-6">
					{post.data.tags.map((tag: string) => (
						<span class="bg-indigo-100 text-indigo-800 px-3 py-1 rounded-md text-sm">
							{tag}
						</span>
					))}
				</div>
			)}
			<p class="text-xl text-gray-600 leading-relaxed">{post.data.description}</p>
		</header>

		<div class="prose prose-lg">
			<Content />
		</div>
	</article>
</Layout>